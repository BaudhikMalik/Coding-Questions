/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1==null)
            return l2;
        if(l2==null)
            return l1;
        
        if(l1.val<l2.val){
            l1.next=mergeTwoLists(l1.next,l2);
        return l1;
        }
        else{
            l2.next=mergeTwoLists(l1,l2.next);
        return l2;}
    }
}















//











/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
    public ListNode mergeTwoLists(ListNode A, ListNode B) {
        if(A == null) return B; 
        if(B == null) return A; 
          
        if(A.val < B.val)  
        { 
            A.next = mergeTwoLists(A.next, B); 
            return A; 
        } 
        else 
        { 
            B.next = mergeTwoLists(A, B.next); 
            return B; 
        } 
    }
}
