class Solution {
    public boolean subsetSum(int w[],int s,int n){
        boolean dp[][]=new boolean[n+1][s+1];
        dp[0][0]=true;
        for(int i=1;i<n+1;i++){
            dp[i][0]=true;
        }
        for(int i=1;i<s+1;i++){
            dp[0][i]=false;
        }
        for(int i=1;i<n+1;i++){
            for(int j=1;j<s+1;j++){
                if(w[i-1]<=j){
                    dp[i][j]=dp[i-1][j-w[i-1]]||dp[i-1][j];
                }
                else
                    dp[i][j]=dp[i-1][j];
            }
        }
        return dp[n][s];
    }
    public boolean canPartition(int[] nums) {
        int sum=0;
        int n=nums.length;
        for(int i=0;i<n;i++)
            sum+=nums[i];
        
        if(sum%2!=0)
            return false;
        else
            return subsetSum(nums,sum/2,n);
    }
}


