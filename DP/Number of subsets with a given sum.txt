/*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class Main{
    public static boolean subsum(int w[],int c,int n){
       boolean dp[][]=new boolean[n+1][c+1];
       dp[0][0]=1;
        
        for(int i=1;i<n+1;i++)
            dp[i][0]=1;
        for(int i=1;i<amount+1;i++)
            dp[0][i]=0;
       for(int i=1;i<n+1;i++){
           for(int j=1;j<c+1;j++){
               if(w[i-1]<=j){
                   dp[i][j]=(dp[i-1][j-w[i-1]])+(dp[i-1][j]);
               }
               else
               dp[i][j]=dp[i-1][j];
           }
       }
       return dp[n][c];
    }
	public static void main (String[] args) {
	    
		Scanner sc=new Scanner(System.in);
		int t=sc.nextInt();
		while(t-->0){
		    int n=sc.nextInt();
		    int c=sc.nextInt();
		    int wt[]=new int[n];
		    for(int i=0;i<n;i++)
		    wt[i]=sc.nextInt();
		    
		    boolean profit=subsum(wt,c,n);
		    System.out.println(profit);
		}
	}
}




The difference from subset sum is just the + instead of 
OR in the DP value.






