class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        int l1=text1.length();int l2=text2.length();
        int dp[][]=new int[l1+1][l2+1];
        
        for(int i=1;i<l1+1;i++){
            for(int j=1;j<l2+1;j++){
                if(text1.charAt(i-1)==text2.charAt(j-1))
                dp[i][j]=1+dp[i-1][j-1];
                else
                    dp[i][j]=Math.max(dp[i-1][j],dp[i][j-1]);
            }
        }
        return dp[l1][l2];
    }
    public int longestPalindromeSubseq(String s) {
        String rev="";
        for(int i=0;i<s.length();i++){
            rev=s.charAt(i)+rev;
        }
        return s.length-longestCommonSubsequence(s,rev);
    }
}




The value is same as
No of deletions


Here the deletion
is done after finding longest Palindromic Subsequence


















