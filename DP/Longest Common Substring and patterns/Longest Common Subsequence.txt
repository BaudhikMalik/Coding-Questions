//Recursive Code
Recursion-> Recursion with Memoization -> DP

class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        int l1=text1.length();int l2=text2.length();
        if(l1==0||l2==0)
            return 0;
        
        if(text1.charAt(l1-1)==text2.charAt(l2-1))
            return 1+longestCommonSubsequence(text1.substring(0,l1-1),text2.substring(0,l2-1));
        else 
            return Math.max(longestCommonSubsequence(text1.substring(0,l1-1),text2.substring(0,l2)),longestCommonSubsequence(text1.substring(0,l1),text2.substring(0,l2-1)));
           
    }
}

//Time Limit Exceeded Cause Recursion stack filled