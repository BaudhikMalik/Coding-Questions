Here we just Go back using the DP array 
Checking the character which is same

If the character is same, we just add it to string otherwise, we 
check for maximum value from i-1,j or i,j-1


class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        int l1=text1.length();int l2=text2.length();
        int dp[][]=new int[l1+1][l2+1];
        
        for(int i=1;i<l1+1;i++){
            for(int j=1;j<l2+1;j++){
                if(text1.charAt(i-1)==text2.charAt(j-1))
                dp[i][j]=1+dp[i-1][j-1];
                else
                    dp[i][j]=Math.max(dp[i-1][j],dp[i][j-1]);
            }
        }
	String s="";
	int i=l1;int j=l2;
        while(i>0&&j>0){
	if(text1.charAt(i-1)==text2.charAt(j-1){
		s=s+text1.charAt(i);
		i--;
		j--
}
	else {
		if(dp[i-1][j]>dp[i][j-1])
			i--;
		else
			j--;
}
    }
}




So,here we ,move backward and check wherever the value
is incremented by one

We Scan till there and fill out the string