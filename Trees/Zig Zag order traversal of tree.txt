/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        
        List<List<Integer>> al=new ArrayList<>();
        if(root==null)
            return al;
        Queue<TreeNode> qu=new LinkedList<>();
        qu.add(root);
        int c=0;
        while(!qu.isEmpty()){
            List<Integer> temp=new ArrayList<>();
            int si=qu.size();
            
            for(int i=0;i<si;i++){
                TreeNode x=qu.remove();
                temp.add(x.val);
                
                if(x.left!=null)
                    qu.add(x.left);
                
                if(x.right!=null)
                    qu.add(x.right);
                
            }
            if(si!=0)
                c++;
            if(c%2==0)
                Collections.reverse(temp);
            al.add(temp);
        }
        return al;
    }
}