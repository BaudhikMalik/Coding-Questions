/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
    public static int value(int[] a,int[] b){
        int xox=0;
        for(int i=0;i<a.length;i++){
            xox=xox^a[i];
            xox=xox^b[i];
        }
        return xox;
    }
    public static long solve(int[] a,int[] b){
        if(Arrays.equals(a,b))
        return 0;
        
        int val=value(a,b);
        if(val>0)
        return -1;
        
        int auxa[]=new int[100];
        int auxb[]=new int[100];
        for(int i=0;i<a.length;i++){
            auxa[a[i]-1]++;
            auxb[b[i]-1]++;
        }
        ArrayList<Integer> al=new ArrayList<>();
        for(int i=0;i<100;i++){
            if(auxa[i]!=auxb[i])
            for(int j=0;j<(Math.abs(auxa[i]-auxb[i])/2);j++)
            al.add(i+1);
        }
        long ans=0;
        for(int i=0;i<(al.size()/2);i++){
            ans=ans+al.get(i);
        }
        return ans;
    }
	public static void main (String[] args) throws java.lang.Exception
	{
	    Scanner sc=new Scanner(System.in);
	    int t=sc.nextInt();
	    while(t-->0){
	        int n=sc.nextInt();
	        int a[]=new int[n];
	        int b[]=new int[n];
	        for(int i=0;i<n;i++)
	        a[i]=sc.nextInt();
	        for(int i=0;i<n;i++)
	        b[i]=sc.nextInt();
	        Arrays.sort(a);
	        Arrays.sort(b);
	        long ans=solve(a,b);
	        
	        System.out.println(ans);
	    }
	}
}




//Approach2
/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
    public static int value(int[] a,int[] b){
        int xox=0;
        for(int i=0;i<a.length;i++){
            xox=xox^a[i];
            xox=xox^b[i];
        }
        return xox;
    }
    public static long solve(int[] a,int[] b){
        if(Arrays.equals(a,b))
        return 0;
        
        int val=value(a,b);
        if(val>0)
        return -1;
       
       int min=Integer.MAX_VALUE;
       for(int i=0;i<a.length;i++){
               min=Math.min(min,Math.min(a[i],b[i]));
       }
       return min*(a.length-1);
    }
	public static void main (String[] args) throws java.lang.Exception
	{
	    Scanner sc=new Scanner(System.in);
	    int t=sc.nextInt();
	    while(t-->0){
	        int n=sc.nextInt();
	        int a[]=new int[n];
	        int b[]=new int[n];
	        for(int i=0;i<n;i++)
	        a[i]=sc.nextInt();
	        for(int i=0;i<n;i++)
	        b[i]=sc.nextInt();
	        Arrays.sort(a);
	        Arrays.sort(b);
	        long ans=solve(a,b);
	        
	        System.out.println(ans);
	    }
	}
}
class Solution {
    
        public int islandPerimeter(int[][] grid) {
        // checking boundries
        if(grid==null || grid[0].length == 0) 
            return 0;
        
        int peri = 0;
        for(int i=0;i<grid.length;i++) {
            for(int j=0;j<grid[i].length;j++) {
                if(grid[i][j] == 1) {
                    peri +=4;                        // adding every island 
                    
                    if(i > 0 && grid[i-1][j] == 1)   // checking neighbours and substracting 
                        peri -= 2;
                    if(j>0 && grid[i][j-1]== 1)      // checking neighbours and substracting
                        peri -= 2;
                }
            }
        }
        return peri;
    }
}












//C++ finally
#include<bits/stdc++.h>
#define lon long long int
using namespace std;


int main(){
    lon test;
    cin>>test;
    while(test--){
        lon n=0,min_val=INT_MAX,ans=0;
        cin>>n;
        lon a1[n], a2[n];
        map<lon,lon> a,b,c;
        
        for(lon i=0; i<n; i++){
            cin>>a1[i];
            c[a1[i]]++;
        }
        for(lon i=0; i<n; i++){
            cin>>a2[i];
            c[a2[i]]++;
        }
        for(lon i=0; i<n; i++){
            min_val= min(min_val, min(a1[i],a2[i]));
            a[a1[i]]++;
            b[a2[i]]++;
        }
        int co=0;
        if(a==b)
            cout<<"0"<<"\n";
        
        else{
            for(auto i:c){
                if(i.second%2!=0){
                    cout<<"-1"<<"\n";
                    co++;
                    break;
                }
            }
                if(co==0){
                vector<lon> v;
                int t=0;
                for(auto i:a){
                    t = i.second;
                    if(b.find(i.first)!= b.end())
                        t = abs(i.second - b[i.first]);
                        
                    t=t/2;
                    for(lon j=0; j<t; j++)
                        v.push_back(i.first);
                }
                
                for(auto i:b){
                    if(a.find(i.first)==a.end())
                        t = i.second;
                    else
                        continue;
                    t=t/2;
                    for(lon j=0; j<t; j++)
                        v.push_back(i.first);
                }
                sort(v.begin(), v.end());//Sorting the vector
                lon l = v.size();
                for(lon i=0; i<l/2; i++){
                    ans =ans+ min(2*min_val, v[i]);
                }
                
                cout<<ans<<"\n";
                }
        
        }
    }
}









